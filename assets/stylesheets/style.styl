
@import 'index'
@import 'index@2x'

sprite-size(name, sprite, ratio = 1)
  width (sprite[name][2] / ratio)
  height (sprite[name][3] / ratio)
sprite-offset(name, sprite, ratio = 1)
  background-position (sprite[name][0] / ratio) (sprite[name][1] / ratio)
sprite-background(sprite, ratio = 1)
  background-image url(sprite['image'])
  if ratio != 1
    background-size (sprite['width'] / ratio) (sprite['height'] / ratio)

retina_media_query = "(-webkit-min-device-pixel-ratio: 1.5),
  (min--moz-device-pixel-ratio: 1.5),
  (-o-min-device-pixel-ratio: 3/2),
  (min-device-pixel-ratio: 3/2)"

substract-items(names, excluded)
  result = {}
  for name in names
    unless name in excluded
      result[name] = true
  keys(result)

spritesheet-rules(
  sprite,
  prefix = "sprite-",
  ratio = 1,
  withIconSizeRulesSuffix = "-size",
  excluded = (),
  skipSize = false
  )
  names = substract-items(sprite['names'], excluded)
  unless length(names) == 0
    .{prefix}{join(", ." + prefix, names)}
      sprite-background(sprite, ratio)
    for spriteName in names
      if withIconSizeRulesSuffix
        .{prefix}{spriteName},
        .{prefix}{spriteName}{withIconSizeRulesSuffix}
          sprite-size(spriteName, sprite, ratio)
        .{prefix}{spriteName}
          sprite-offset(spriteName, sprite, ratio)
      else
        .{prefix}{spriteName}
          sprite-size(spriteName, sprite, ratio) unless skipSize
          sprite-offset(spriteName, sprite, ratio)

retina-spritesheet-rules(sprite, sprite2x, prefix = "sprite-", withIconSizeRulesSuffix = "-size")
  spritesheet-rules(sprite, prefix, 1, withIconSizeRulesSuffix)
  @media retina_media_query
    spritesheet-rules(sprite2x, prefix, 2, null, null, true)
  spritesheet-rules(sprite2x, prefix, 2, withIconSizeRulesSuffix, sprite.names)

retina-spritesheet-rules($index, $index_2x, "")

.demo-border
  border 1px dashed blue

.on-retina
  display none
@media retina_media_query
  .on-retina
    display block
  .not-on-retina
    display none
