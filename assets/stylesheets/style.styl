
@import 'index'
@import 'index@2x'

sprite-size(name, sprite, ratio = 1)
  width (sprite[name][2] / ratio)
  height (sprite[name][3] / ratio)
sprite-offset(name, sprite, ratio = 1)
  background-position (sprite[name][0] / ratio) (sprite[name][1] / ratio)
sprite-background(sprite, ratio = 1)
  background-image url(sprite['image'])
  if ratio != 1
    background-size (sprite['width'] / ratio) (sprite['height'] / ratio)

retina_media_query = "(-webkit-min-device-pixel-ratio: 1.5),
  (min--moz-device-pixel-ratio: 1.5),
  (-o-min-device-pixel-ratio: 3/2),
  (min-device-pixel-ratio: 3/2)"

spritesheet-rules(
  sprite,
  prefix = "sprite-",
  ratio = 1,
  withIconSizeRulesSuffix = "-size"
  )
  .{prefix}{join(", ." + prefix, sprite.names)}
    sprite-background(sprite, ratio)
  for spriteName in sprite.names
    if withIconSizeRulesSuffix
      .{prefix}{spriteName},
      .{prefix}{spriteName}{withIconSizeRulesSuffix}
        sprite-size(spriteName, sprite, ratio)
      .{prefix}{spriteName}
        sprite-offset(spriteName, sprite, ratio)
    else
      .{prefix}{spriteName}
        sprite-size(spriteName, sprite, ratio)
        sprite-offset(spriteName, sprite, ratio)


retina-spritesheet-rules(sprite, sprite2x, prefix = "")
  spritesheet-rules(sprite, prefix)
  @media retina_media_query
    spritesheet-rules(sprite2x, prefix, 2)

retina-spritesheet-rules($index, $index_2x)

.demo-border
  border 1px dashed blue

.on-retina
  display none
@media retina_media_query
  .on-retina
    display block
  .not-on-retina
    display none
